.layout-columnist .article-header-row {
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  padding: 209px 64px 55px 99px;
}

@media screen and (max-width: 768px) {
  .layout-columnist .article-header-row {
    padding: 180px 0 55px;
  }
}

.layout-columnist .article-header-row h1 {
  color: #4A4A4A;
  letter-spacing: 6.48px;
  line-height: 72px;
  padding-left: 0;
}

@media screen and (max-width: 1200px) {
  .layout-columnist .article-header-row h1 {
    font-size: 50px;
  }
}

@media screen and (min-width: 1200px) {
  .layout-columnist .article-header-row h1 {
    padding: 0 0 84px 10px;
    font-size: 62px;
  }
}

.layout-columnist .article-header-row .date-published {
  padding-left: 0;
}

@media screen and (min-width: 1200px) {
  .layout-columnist .article-header-row .date-published {
    padding-left: 10px;
  }
}

@media screen and (max-width: 768px) {
  .layout-columnist .article-header-row .date-published {
    padding-left: 0;
  }
  .layout-columnist .article-header-row h1 {
    font-size: 33px;
    line-height: 1em;
    padding-left: 0;
  }
}

.layout-columnist .article-header-row .article-category-wrapper {
  padding-bottom: 52px;
}

@media screen and (max-width: 768px) {
  .layout-columnist .article-header-row .article-category-wrapper {
    padding-bottom: 10px;
  }
}

.layout-columnist .article-header-row .right-panel {
  padding-top: 112px;
}

@media screen and (max-width: 992px) {
  .layout-columnist .article-header-row .right-panel {
    padding-top: 40px;
  }
}

.layout-columnist .article-header-row .right-panel .about-columnist {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: justify;
      justify-content: space-between;
  height: 288px;
}

@media screen and (max-width: 992px) {
  .layout-columnist .article-header-row .right-panel .about-columnist {
    margin-top: 25px;
    height: 210px;
  }
}

.layout-columnist .article-header-row .right-panel .about-columnist a {
  font-size: 18px;
  text-decoration: underline;
}

.layout-columnist .article-header-row .right-panel .about-columnist .follow-button {
  border: 1px solid #775a22;
  font-size: 20px;
  text-align: center;
  width: 115px;
}

.layout-columnist .article-header-row .right-panel .about-columnist .follow-button a {
  text-decoration: none;
}

.layout-columnist .article-header-row .right-panel .about-columnist .particle-text {
  color: #4A4A4A;
  line-height: 25px;
}

.layout-columnist .hr-container {
  padding: 0 110px;
}

.layout-columnist .body-text {
  text-align: justify;
  padding: 127px 375px 450px;
}

.layout-columnist .body-text .particle-text {
  font-size: 18px;
}

@media screen and (max-width: 992px) {
  .layout-columnist .body-text {
    padding: 127px 13px 450px;
  }
}

.layout-columnist .first-letter::first-letter {
  margin: 10px 0 0 -15px;
  padding-right: 10px;
  color: #4A4A4A;
}

.layout-columnist .particle-pullquote {
  padding: 25px 0 44px;
}

.layout-front hr {
  border-color: #775a22;
}

.layout-front h2 {
  font-size: 32px;
  letter-spacing: 0.64px;
}

.layout-front h3 {
  font-size: 16px;
  text-transform: uppercase;
  color: #775a22;
  font-family: "avenirnext-regular", Helvetica, Arial, sans-serif;
}

.layout-front .articles,
.layout-front .articles-grid,
.layout-front .contributors-grid {
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
}

@media screen and (max-width: 768px) {
  .layout-front .contributors-grid {
    margin-top: 15px;
  }
}

.layout-front .contributors-headline {
  margin-bottom: 110px;
  text-align: center;
}

@media screen and (max-width: 992px) {
  .layout-front .contributors-headline {
    margin-top: 180px;
  }
}

.layout-front .about-contributor {
  padding: 0 30px;
  margin-bottom: 100px;
}

.layout-front .about-contributor h2 {
  color: #4A4A4A;
}

.layout-front .about-contributor h3 {
  text-decoration: underline;
  margin: 12px 0 17px;
}

.layout-front .about-contributor .particle-image img {
  margin: 0 auto;
}

.layout-front .about-contributor .particle-text {
  font-size: 14px;
  letter-spacing: 0.19px;
  line-height: 24px;
  margin-left: 15px;
  padding: 0 10px;
}

@media screen and (max-width: 992px) {
  .layout-front .about-contributor {
    text-align: center;
    margin-bottom: 35px;
  }
  .layout-front .about-contributor .particle-text {
    margin-left: 0;
  }
}

@media screen and (min-width: 768px) {
  .layout-front .lg-img,
  .layout-front .sm-img {
    position: relative;
    padding-bottom: 197px;
  }
}

.layout-front .lg-img img {
  margin: 0 auto;
}

.layout-front .recommend-headline {
  text-align: center;
  margin: 80px 0;
}

.layout-front .recommend-headline .heading-text,
.layout-front .section-header .heading-text {
  color: #775a22;
  font-family: "avenirnext-regular", Helvetica, Arial, sans-serif;
}

.layout-front .section-header .heading-line {
  border-color: #775a22;
}

.layout-front .section-header .heading-text {
  margin-top: -1.5em;
}

.layout-front .section-header .heading-text-valign-middle {
  background-color: #ffffff;
  padding: 0 20px;
}

.layout-front .articles-grid {
  margin-top: 40px;
}

.layout-front .articles-list hr,
.layout-front .square-article hr {
  margin-bottom: 40px;
}

.layout-front .articles-list .meta-links,
.layout-front .square-article .meta-links {
  margin: 38px 10px 0 32px;
  width: auto;
}

.layout-front .articles-list .meta-links h2,
.layout-front .square-article .meta-links h2 {
  color: #4A4A4A;
}

@media screen and (min-width: 992px) {
  .layout-front .articles-list,
  .layout-front .square-article {
    margin-bottom: 180px;
  }
}

@media screen and (max-width: 992px) {
  .layout-front .articles-list,
  .layout-front .square-article {
    margin-top: 50px;
  }
  .layout-front .articles-list h2,
  .layout-front .articles-list h2:last-child,
  .layout-front .square-article h2,
  .layout-front .square-article h2:last-child {
    margin-left: 10px;
  }
}

@media screen and (max-width: 1200px) {
  .layout-front .articles-list h2,
  .layout-front .square-article h2 {
    font-size: 26px;
    line-height: 30px;
    margin-top: 10px;
  }
}

.layout-front .articles-list .particle-text {
  padding-bottom: 1em;
  font-size: 14px;
  line-height: 2em;
}

.layout-front .articles-list .particle-text .bold-bits {
  font-family: "avenirnext-demibold", Helvetica, Arial, sans-serif, Sans-Serif;
  font-size: 20px;
  color: #4A4A4A;
}

@media screen and (min-width: 1200px) {
  .layout-front .articles-list .particle-text {
    font-size: 18px;
  }
  .layout-front .articles-list .particle-text .bold-bits {
    font-size: 24px;
  }
}

@media screen and (max-width: 992px) {
  .layout-front .articles-list .particle-text {
    margin-left: 10px;
    margin-right: 10px;
  }
}

.layout-front .articles-list .more-button {
  -ms-flex-item-align: end;
      align-self: flex-end;
  background-color: #775a22;
  text-align: right;
  margin-top: 40px;
}

.layout-front .articles-list .more-button a {
  color: #ffffff;
  font-family: "avenirnext-regular", Helvetica, Arial, sans-serif;
  font-size: 18px;
  text-transform: uppercase;
  padding: 11px 25px 11px 0;
}

.layout-front .article-meta-large,
.layout-front .article-meta-large-centered,
.layout-front .article-meta-large-left,
.layout-front .article-meta-small,
.layout-front .article-meta-xtr-sm {
  bottom: 40px;
  line-height: 20px;
  padding: 22px 24px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
}

@media screen and (min-width: 768px) {
  .layout-front .article-meta-large,
  .layout-front .article-meta-large-centered,
  .layout-front .article-meta-large-left,
  .layout-front .article-meta-small,
  .layout-front .article-meta-xtr-sm {
    border: 1px solid #775a22;
    background-color: #ffffff;
    position: absolute;
    z-index: 5;
  }
}

.layout-front .article-meta-large h2,
.layout-front .article-meta-large-centered h2,
.layout-front .article-meta-large-left h2,
.layout-front .article-meta-small h2,
.layout-front .article-meta-xtr-sm h2 {
  color: #4A4A4A;
  margin-left: 10px;
}

@media screen and (max-width: 1200px) {
  .layout-front .article-meta-large h2,
  .layout-front .article-meta-large-centered h2,
  .layout-front .article-meta-large-left h2,
  .layout-front .article-meta-small h2,
  .layout-front .article-meta-xtr-sm h2 {
    font-size: 26px;
    line-height: 30px;
  }
}

.layout-front .article-meta-large .article-category,
.layout-front .article-meta-large-centered .article-category,
.layout-front .article-meta-large-left .article-category,
.layout-front .article-meta-small .article-category,
.layout-front .article-meta-xtr-sm .article-category {
  border: none;
  font-size: 16px;
  padding: 10px 0 0;
  color: #775a22;
  text-transform: uppercase;
  text-decoration: underline;
}

.layout-front .article-meta-large a,
.layout-front .article-meta-large-centered a,
.layout-front .article-meta-large-left a,
.layout-front .article-meta-small a,
.layout-front .article-meta-xtr-sm a {
  text-decoration: none;
  color: #9B9B9B;
}

.layout-front .article-meta-large .article-category:hover,
.layout-front .article-meta-large-centered .article-category:hover,
.layout-front .article-meta-large-left .article-category:hover,
.layout-front .article-meta-small .article-category:hover,
.layout-front .article-meta-xtr-sm .article-category:hover {
  background-color: #ffffff;
}

.layout-front .has-intro-text h2 {
  margin-top: 10px;
  margin-bottom: 0;
}

.layout-front .has-intro-text .particle-text {
  margin: 10px 0 0 10px;
  line-height: 22px;
  font-size: 14px;
}

@media screen and (min-width: 992px) {
  .layout-front .has-intro-text .particle-text {
    line-height: 24px;
    font-size: 14px;
  }
}

.layout-front .has-intro-text .contributor-list {
  margin-top: 23px;
}

@media screen and (max-width: 768px) {
  .layout-front .has-intro-text {
    max-width: 100%;
    padding-left: 15px;
    padding-right: 0;
    width: 450px;
  }
  .layout-front .has-intro-text .article-category {
    font-size: 14px;
    line-height: 14px;
  }
}

@media screen and (min-width: 768px) {
  .layout-front .article-meta-large-centered {
    bottom: 40px;
    width: 66%;
    margin-left: 16%;
  }
  .layout-front .article-meta-large {
    bottom: 40px;
    width: 66%;
    margin-left: 25%;
  }
  .layout-front .article-meta-large-left {
    width: 44%;
    bottom: 40px;
    margin-left: 17%;
  }
  .layout-front .article-meta-small {
    bottom: 40px;
    margin-right: 13px;
  }
}

@media screen and (min-width: 768px) and (max-width: 1200px -1) {
  .layout-front .article-meta-small {
    margin-right: 0;
  }
}

@media screen and (min-width: 768px) and (min-width: 1200px) {
  .layout-front .article-meta-small {
    margin-right: 40px;
  }
}

@media screen and (min-width: 768px) {
  .layout-front .article-meta-xtr-sm {
    padding-right: 0;
    margin-right: 13px;
  }
}

@media screen and (min-width: 768px) and (max-width: 1200px -1) {
  .layout-front .article-meta-xtr-sm {
    margin-left: 0;
  }
}

@media screen and (min-width: 768px) and (min-width: 1200px) {
  .layout-front .article-meta-xtr-sm {
    margin-left: 40px;
  }
}

@media screen and (max-width: 992px) {
  .layout-front .lg-img img,
  .layout-front .sm-img img,
  .layout-front .square-article img,
  .layout-front .wide-img img,
  .layout-front .xs-img img {
    margin: 0;
    display: block;
    max-width: 100%;
  }
}

@media screen and (max-width: 768px) and (max-width: 768px) {
  .layout-front .col-sm-3,
  .layout-front .col-sm-4,
  .layout-front .col-sm-6,
  .layout-front .col-sm-9,
  .layout-front .container-fluid,
  .layout-front .panel-1,
  .layout-front .row {
    padding-left: 0;
    padding-right: 0;
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
}

.layout-short {
  margin-bottom: 20px;
  width: 100%;
}

.layout-short .article-byline {
  padding-left: 62px;
  padding-right: 62px;
}

.layout-short .navbar-brand-img {
  float: none;
  margin: 0 auto;
}

@media screen and (min-width: 992px) {
  .layout-short .text-with-columns {
    -webkit-column-count: 2;
       -moz-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 110px;
       -moz-column-gap: 110px;
            column-gap: 110px;
    padding: 0 62px;
  }
}

.layout-short .particle-text {
  font-size: 18px;
}

.layout-short .particle-text strong {
  font-family: "avenirnext-demibold", Helvetica, Arial, sans-serif, Sans-Serif;
}

@media screen and (max-width: 992px) {
  .layout-short .particle-text,
  .layout-short .text-with-columns {
    padding-left: 10px;
    padding-right: 10px;
  }
}

.layout-short .article-meta {
  margin-top: 145px;
}

@media screen and (max-width: 479px) {
  .layout-short .article-meta {
    margin-top: 240px;
  }
}

@media screen and (min-width: 480px) and (max-width: 991px) {
  .layout-short .article-meta {
    margin-top: 177px;
  }
}

.layout-short .article-title {
  margin-top: 39px;
}

@media screen and (min-width: 768px) {
  .layout-short .article-title {
    letter-spacing: 6.31px;
    line-height: 78px;
    font-size: 50px;
  }
}

@media screen and (min-width: 768px) {
  .layout-short .article-category-wrapper,
  .layout-short .article-intro-border {
    margin-left: -26px;
  }
  .layout-short .contributor-list {
    position: relative;
  }
  .layout-short .contributor-list .item-0 .avatar-wrapper {
    position: absolute;
    left: -50px;
  }
}

@media screen and (min-width: 992px) {
  .layout-short .date-published-wrapper {
    text-align: right;
  }
}

.layout-feature .article-header {
  margin-top: 350px;
}

.layout-feature .article-header .article-title {
  font-family: "avenirnext-bold", Helvetica, Arial, sans-serif;
  font-size: 48px;
  letter-spacing: 8px;
}

.layout-feature .half-width-picture {
  padding-left: 0;
  padding-right: 0;
}

@media screen and (max-width: 768px) {
  .layout-feature .col-sm-6,
  .layout-feature .container-fluid,
  .layout-feature .has-hero,
  .layout-feature .row {
    padding-left: 0;
    padding-right: 0;
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
}

@media screen and (min-width: 992px) {
  .layout-feature .container-fluid {
    margin-left: 20px;
    margin-right: 20px;
  }
}

@media screen and (min-width: 768px) {
  .layout-feature .article-category-wrapper {
    margin-left: -30px;
  }
}

.layout-feature .has-hero,
.layout-feature .particle-image {
  margin-bottom: 28px;
}

@media screen and (min-width: 992px) {
  .layout-feature .text-with-columns {
    -webkit-column-count: 2;
       -moz-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 110px;
       -moz-column-gap: 110px;
            column-gap: 110px;
    padding: 0 138px;
  }
}

.layout-feature .text-with-columns,
.layout-feature .text-without-columns {
  margin: 33px 0 100px;
  font-size: 18px;
  text-align: justify;
}

.layout-feature .text-with-columns strong,
.layout-feature .text-without-columns strong {
  font-family: "avenirnext-demibold", Helvetica, Arial, sans-serif, Sans-Serif;
}

@media screen and (max-width: 992px) {
  .layout-feature .text-with-columns,
  .layout-feature .text-without-columns {
    padding-left: 13px;
    padding-right: 13px;
  }
}

.layout-feature .col-right {
  float: right;
}

.layout-feature .col-right .img-responsive {
  float: right;
}

@media screen and (min-width: 992px) {
  .layout-feature .one-column-by-picture {
    padding: 0 112px 0 69px;
  }
}

.layout-feature .contributor-list {
  color: #9B9B9B;
}

.layout-feature .contributor-list .img-responsive {
  max-width: 29px;
}

.layout-feature .contributor-link {
  color: #4A4A4A;
  text-transform: uppercase;
}

.layout-feature .contributor-list .list-item {
  margin-bottom: 25px;
}

.layout-lookbook .article-title {
  margin-bottom: 30px;
  text-transform: uppercase;
  color: #775a22;
  letter-spacing: 0.8px;
}

@media screen and (min-width: 768px) {
  .layout-lookbook .article-title {
    font-size: 45px;
  }
}

.layout-lookbook hr {
  max-width: 125px;
}

.layout-lookbook .contributor-list {
  margin-top: 120px;
}

@media screen and (max-width: 768px) {
  .layout-lookbook .contributor-list {
    margin: 0;
  }
}

.layout-lookbook .article-category-wrapper {
  padding: 183px 0 0 66px;
}

.layout-lookbook .article-category {
  border-color: #775a22;
  color: #775a22;
  text-transform: uppercase;
  text-decoration: none;
}

.layout-lookbook a {
  color: #454241;
  text-decoration: underline;
}

.layout-lookbook .date-published-wrapper {
  float: left;
}

@media screen and (max-width: 768px) {
  .layout-lookbook .date-published-wrapper {
    margin: 15px 0 45px;
  }
}

.layout-lookbook .big-row {
  margin-bottom: 69px;
}

.layout-lookbook .verticle-aligned {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: center;
      justify-content: center;
}

.layout-lookbook .verticle-aligned .text-bottom-left,
.layout-lookbook .verticle-aligned .text-bottom-right {
  bottom: auto;
  top: 27vw;
}

.layout-lookbook .contributor-link {
  color: #0c1204;
  text-decoration: underline;
}

@media screen and (max-width: 768px) {
  .layout-lookbook .article-header,
  .layout-lookbook .particle-intro {
    margin-left: 0;
  }
  .layout-lookbook .big-row {
    margin-bottom: 0;
  }
  .layout-lookbook .photo-credits {
    max-width: 300px;
  }
}

@media screen and (max-width: 992px) {
  .layout-lookbook .particle-image {
    margin-bottom: 25px;
  }
}

@media screen and (min-width: 768px) {
  .layout-lookbook .contributor-list .list-item {
    position: relative;
    margin-bottom: 10px;
  }
  .layout-lookbook .contributor-list .list-item .avatar-wrapper {
    position: absolute;
    left: -50px;
  }
  .layout-lookbook .small-left-image .img-responsive {
    float: right;
  }
  .layout-lookbook .big-image-1 .img-responsive {
    float: right;
  }
  .layout-lookbook .big-image-2 .img-responsive {
    float: left;
  }
}

.layout-picture-intensive h2 {
  font-family: "avenirnext-regular", Helvetica, Arial, sans-serif;
  font-size: 18px;
}

.layout-picture-intensive hr {
  border-color: #775a22;
}

.layout-picture-intensive .header-image {
  position: absolute;
  width: 100vw;
  top: 0;
}

@media screen and (max-width: 768px) {
  .layout-picture-intensive .big-image-div,
  .layout-picture-intensive .header-image,
  .layout-picture-intensive .panel-1,
  .layout-picture-intensive .row {
    padding-left: 0;
    padding-right: 0;
    width: 100%;
    margin-left: 0;
    margin-right: 0;
  }
}

.layout-picture-intensive .panel-2 {
  margin-bottom: 65px;
  height: 100vh;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive .panel-2 {
    height: 50vh;
    min-height: none !important;
    width: 100%;
    margin-bottom: 0;
  }
}

.layout-picture-intensive .article-category-container {
  margin-top: 160px;
  position: absolute;
  z-index: 10;
  text-align: center;
  padding-right: 0;
  width: 100%;
}

.layout-picture-intensive .article-meta-col {
  float: right;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive .article-meta-col {
    height: 50vh;
    margin: 53vh auto 0;
    width: 95%;
    float: none;
  }
}

.layout-picture-intensive .article-meta {
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 5;
  border: 1px solid #775a22;
  padding: 50px 80px;
  margin-top: 140px;
}

.layout-picture-intensive .article-meta h1 {
  font-size: 28px;
  margin: 25px 0 50px;
}

.layout-picture-intensive .article-meta hr {
  margin: 25px 0 47px;
}

.layout-picture-intensive .article-meta .particle-text {
  font-size: 15px;
  line-height: 27px;
  letter-spacing: 0.2px;
  color: #4A4A4A;
  font-family: "avenirnext-demibold", Helvetica, Arial, sans-serif;
}

.layout-picture-intensive .article-meta .contributor-list {
  font-size: 13px;
  margin-left: -39px;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive .article-meta {
    width: 95%;
    margin: 13px auto 0;
  }
  .layout-picture-intensive .article-meta h1 {
    font-size: 20px;
    margin: 20px 0;
  }
  .layout-picture-intensive .article-meta .particle-text {
    box-sizing: none !important;
    font-size: 12px;
  }
}

.layout-picture-intensive .pullquote-container {
  font-style: italic;
  font-size: 42px;
  letter-spacing: 0.75px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-item-align: end;
      align-self: flex-end;
}

.layout-picture-intensive .first-text {
  padding-top: 220px;
}

.layout-picture-intensive .first-text .first-letter::first-letter {
  font-style: italic;
  margin-right: 40px;
  padding-top: 12px;
  font-family: "TheanoDidot-Regular", Georgia, "Times New Roman", Times, serif;
}

@media screen and (min-width: 768px) {
  .layout-picture-intensive .first-text .first-letter::first-letter {
    margin-left: -100px;
    margin-right: 100px;
  }
}

.layout-picture-intensive .big-image {
  margin: 90px 0 55px;
}

.layout-picture-intensive .small-image {
  margin: 84px 0 125px;
}

@media screen and (max-width: 768px) {
  .layout-picture-intensive .small-image {
    margin: 0;
  }
  .layout-picture-intensive .small-image .col-sm-6 {
    padding: 0 0 40px;
  }
}

.layout-picture-intensive .text-field-in-img {
  background-color: #ffffff;
  float: right;
  margin-top: 102px;
  opacity: 0.9;
  border: solid 1px #775a22;
  line-height: 30px;
}

.layout-picture-intensive .text-field-in-img strong {
  color: #775a22;
  text-transform: uppercase;
  margin-left: -25px;
  font-size: 13px;
}

.layout-picture-intensive .text-field-in-img .particle-text {
  margin: 20px 0 0 50px;
  font-size: 13px;
}

@media screen and (min-width: 768px) {
  .layout-picture-intensive .text-field-in-img {
    width: 25%;
  }
}

@media screen and (max-width: 768px) {
  .layout-picture-intensive .text-field-in-img {
    margin: 50px 0;
    float: none;
  }
}

@media screen and (max-width: 768px) {
  .layout-picture-intensive .photo-credits {
    position: absolute;
    z-index: 10;
    bottom: 40px;
    left: 40px;
    max-width: 75%;
  }
}

.layout-picture-intensive-2 h2 {
  font-size: 45px;
  font-family: "TheanoDidot-Regular", Georgia, "Times New Roman", Times, serif;
  margin: 0 0 48px 24px;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 h2 {
    font-size: 30px;
    margin: 0 0 48px;
  }
}

.layout-picture-intensive-2 .particle-text {
  font-size: 18px;
  text-align: justify;
}

.layout-picture-intensive-2 .header-goodies .left-panel {
  margin-top: 183px;
}

.layout-picture-intensive-2 .header-goodies .left-panel h1 {
  font-size: 45px;
  margin: 52px 144px 55px 63px;
  line-height: 57px;
}

.layout-picture-intensive-2 .header-goodies .left-panel hr {
  width: 260px;
  border: 1px solid #775a22;
}

.layout-picture-intensive-2 .header-goodies .left-panel .particle-text {
  margin: 0 63px;
}

.layout-picture-intensive-2 .header-goodies .left-panel .article-category {
  margin-left: 22px;
}

.layout-picture-intensive-2 .header-goodies .left-panel .contributor-list {
  margin: 40px 0 40px 22px;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 .header-goodies .left-panel h1 {
    font-size: 35px;
    margin: 52px 10px 75px;
  }
  .layout-picture-intensive-2 .header-goodies .left-panel hr {
    width: 100px;
    border-color: #775a22;
  }
  .layout-picture-intensive-2 .header-goodies .left-panel .particle-text {
    margin: 0 10px;
  }
  .layout-picture-intensive-2 .header-goodies .left-panel .article-category {
    margin-left: 10px;
  }
  .layout-picture-intensive-2 .header-goodies .left-panel .contributor-list {
    margin: 10px 0 100px 22px;
  }
}

.layout-picture-intensive-2 .text-with-borderbox {
  box-sizing: border-box;
  padding: 38px 116px;
}

.layout-picture-intensive-2 .removed-padding-col {
  padding: 0;
}

.layout-picture-intensive-2 .round-image {
  position: absolute;
  z-index: 1;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 .round-image {
    max-width: 75%;
  }
}

.layout-picture-intensive-2 .behind-image {
  z-index: -1;
  float: right;
  margin-top: 41vw;
  margin-bottom: 100px;
  width: 50%;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 .behind-image {
    margin-top: 25vw;
    margin-bottom: 0;
  }
}

.layout-picture-intensive-2 .behind-image .standalone-credit {
  margin: 0 0 90px -250px;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 .behind-image .standalone-credit {
    margin: 0;
    max-width: 250px;
    font-size: 14px;
    line-height: 18px;
  }
}

.layout-picture-intensive-2 .responsive-text-3 {
  padding-top: 95px;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 .responsive-text-2 {
    padding: 700px 10px 10px;
  }
  .layout-picture-intensive-2 .responsive-text-1 {
    margin-top: 50px;
    padding: 10px;
  }
  .layout-picture-intensive-2 .responsive-text-3 {
    margin-top: 100px;
    padding: 10px;
  }
}

@media screen and (max-width: 768px) {
  .layout-picture-intensive-2 .responsive-text-2 {
    padding: 600px 10px 10px;
  }
}

.layout-picture-intensive-2 .right-side .particle-text {
  margin-bottom: 40px;
}

.layout-picture-intensive-2 .right-aligned-picture img {
  float: right;
}

.layout-picture-intensive-2 .centered-picture img {
  margin: 95px auto 450px;
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 .centered-picture img {
    margin: 95px auto 10px;
  }
}

@media screen and (max-width: 992px) {
  .layout-picture-intensive-2 .centered-picture,
  .layout-picture-intensive-2 .right-aligned-picture {
    padding: 0;
  }
  .layout-picture-intensive-2 .centered-picture img,
  .layout-picture-intensive-2 .right-aligned-picture img {
    margin: 0 auto 15px;
    padding: 0;
    float: none !important;
  }
}

.layout-article-teasers h2 {
  font-size: 18px;
  color: #4A4A4A;
  line-height: 30px;
  letter-spacing: 1.5px;
  font-family: "avenirnext-bold", Helvetica, Arial, sans-serif;
}

.layout-article-teasers .picture-left .particle-image {
  max-width: 212px;
}

.layout-article-teasers .picture-left .article-category {
  margin-bottom: 23px;
}

@media screen and (max-width: 992px) {
  .layout-article-teasers .picture-left .article-category {
    margin-top: 30px;
  }
}

.layout-article-teasers .big-picture-left .particle-image {
  max-width: 331px;
}

.layout-article-teasers .big-picture-left h2 {
  font-size: 24px;
  letter-spacing: 2px;
}

.layout-article-teasers .big-picture-left .particle-text {
  font-family: "avenirnext-bold", Helvetica, Arial, sans-serif;
  line-height: 27px;
  margin-top: 9px;
}

.layout-article-teasers .big-picture-left .article-category {
  margin-bottom: 43px;
}

@media screen and (max-width: 992px) {
  .layout-article-teasers .big-picture-left .article-category {
    margin-top: 30px;
  }
}

.layout-article-teasers .contributor-list {
  margin-top: 16px;
}

.layout-article-teasers .big-picture-left,
.layout-article-teasers .picture-left {
  padding: 40px 0 25px 100px;
}

.layout-article-teasers .big-picture-left .particle-image,
.layout-article-teasers .picture-left .particle-image {
  max-width: 50%;
  float: left;
}

.layout-article-teasers .big-picture-left .meta-links,
.layout-article-teasers .picture-left .meta-links {
  padding-left: 15px;
  max-width: 50%;
  float: right;
}

@media screen and (max-width: 992px) {
  .layout-article-teasers .big-picture-left,
  .layout-article-teasers .picture-left {
    padding-left: 0;
  }
  .layout-article-teasers .big-picture-left .meta-links,
  .layout-article-teasers .big-picture-left .particle-image,
  .layout-article-teasers .picture-left .meta-links,
  .layout-article-teasers .picture-left .particle-image {
    max-width: 100%;
    float: none;
  }
}

.layout-article-teasers .large-h {
  padding: 0 60px 45px 85px;
}

.layout-article-teasers .large-h h2 {
  font-size: 24px;
  letter-spacing: 2px;
}

@media screen and (max-width: 992px) {
  .layout-article-teasers .large-h {
    padding-left: 13px;
  }
}

.layout-article-teasers .small-h {
  padding: 0 60px 45px 85px;
}

@media screen and (max-width: 992px) {
  .layout-article-teasers .small-h {
    padding-left: 13px;
  }
}

.layout-article-teasers .large-h-with-intro {
  padding: 0 0 68px 140px;
}

.layout-article-teasers .large-h-with-intro h2 {
  font-size: 24px;
  letter-spacing: 2px;
  margin-bottom: 35px;
}

.layout-article-teasers .large-h-with-intro .particle-text {
  color: #4A4A4A;
  font-size: 15px;
  font-family: "avenirnext-bold", Helvetica, Arial, sans-serif;
}

@media screen and (max-width: 992px) {
  .layout-article-teasers .large-h-with-intro {
    padding-left: 13px;
  }
}

.layout-product-review .panel-1 {
  padding-left: 0;
}

.layout-product-review .panel-1 .panel-2 {
  width: 100vw;
  padding-left: 0;
  height: 100vh;
  position: absolute;
}

@media screen and (max-width: 768px) {
  .layout-product-review .panel-1 .panel-2 {
    width: 100%;
  }
}

.layout-product-review .panel-1 .col-md-3 {
  background-color: rgba(255, 255, 255, 0.9);
  z-index: 5;
  padding-top: 76px;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column;
  -ms-flex-pack: distribute;
      justify-content: space-around;
  float: right;
}

.layout-product-review .panel-1 .col-md-3 .article-category {
  margin-left: 34px;
}

.layout-product-review .panel-1 .col-md-3 h1 {
  font-family: "avenirnext-demibold", Helvetica, Arial, sans-serif, Sans-Serif;
  font-size: 36px;
  line-height: 61px;
  margin: 0 0 0 60px;
}

.layout-product-review .panel-1 .col-md-3 .particle-text {
  line-height: 35px;
  margin-left: 65px;
  padding-left: 13px;
  padding-right: 13px;
}

.layout-product-review .panel-1 .col-md-3 .contributor-list {
  margin: 0 0 0 27px;
}

@media screen and (min-width: 992px) {
  .layout-product-review .panel-1 .col-md-3 {
    height: 100vh;
  }
}

@media screen and (max-width: 768px) {
  .layout-product-review .panel-1 .col-md-3 h1 {
    font-size: 25px;
    line-height: 35px;
  }
  .layout-product-review .panel-1 .col-md-3 .article-category,
  .layout-product-review .panel-1 .col-md-3 .particle-text,
  .layout-product-review .panel-1 .col-md-3 h1 {
    margin-left: 20px;
  }
  .layout-product-review .panel-1 .col-md-3 .contributor-list {
    margin: 0 0 0 27px;
  }
}

@media screen and (max-width: 992px) {
  .layout-product-review .panel-1 .col-md-3 {
    margin-top: 40vh;
    width: 100vw;
    height: 60vh;
  }
}

.layout-product-review .panel-1 .col-md-3 .contributor-list {
  margin-bottom: 27px;
}

@media screen and (max-width: 992px) {
  .layout-product-review .first-text {
    margin-top: 35px;
  }
  .layout-product-review .col-right img {
    margin: 35px 0;
  }
  .layout-product-review .col-left img {
    margin-bottom: 35px;
  }
}

@media screen and (min-width: 992px) {
  .layout-product-review .text-with-columns {
    -webkit-column-count: 2;
       -moz-column-count: 2;
            column-count: 2;
    -webkit-column-gap: 110px;
       -moz-column-gap: 110px;
            column-gap: 110px;
    padding: 0 138px;
  }
}

.layout-product-review .particle-text strong {
  font-family: "avenirnext-demibold", Helvetica, Arial, sans-serif, Sans-Serif;
}

@media screen and (max-width: 992px) {
  .layout-product-review .particle-text,
  .layout-product-review .text-with-columns {
    padding-left: 10px;
    padding-right: 10px;
  }
}

.layout-product-review .text-row {
  padding: 10px;
  text-align: justify;
}

.layout-product-review .text-row .col-left {
  margin-top: 35px;
}

@media screen and (min-width: 992px) {
  .layout-product-review .text-row {
    padding: 65px 138px 30px;
  }
  .layout-product-review .text-row .col-right {
    padding-right: 55px;
  }
  .layout-product-review .text-row .col-left {
    padding-left: 55px;
    margin-top: 0;
  }
}

.dummy > * {
  height: 300px;
  background-color: #ccc;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
